// # TODO
// # L√§gg till middleware f√∂r att hantera JSON-data och CORS i din server.
// # Installera mongoose f√∂r att ansluta till MongoDB. Skapa en fil, t.ex. db.js eller db.ts, d√§r du ansluter till databasen.
// # Bygg API-rutter f√∂r anv√§ndarregistrering och autentisering (Skapa en mapp f√∂r rutter, t.ex. routes, och en authRoutes.js f√∂r anv√§ndarhantering (register/login). Implementera grundl√§ggande register- och login-rutter.)
// # Skapa datamodeller f√∂r MongoDB (med Mongoose), Skapa en models-mapp och definiera Mongoose-scheman f√∂r anv√§ndare, leder och packlistor. Skapa √§ven TrailSchema och PackingListSchema med de f√§lt du beh√∂ver.
// # implementera APIER
// # Implementera rutter f√∂r att s√∂ka efter och spara vandringsleder
// # Integrera v√§derdata via OpenWeatherMap API (weatherRoutes.js)
// # clientdel med react o typescript
// # Styling
// # Implementera premiumfunktioner (offlinekartor och prenumeration)
// # Skapa ett schema f√∂r att hantera prenumerationsstatus i UserSchema. Implementera Stripe f√∂r betalningar och premiumprenumeration. Anv√§nd Mapbox API f√∂r att tillhandah√•lla offlinekartor till prenumeranter.
// # Sluttestning och deployment

// # √∂ppna terminal
// # nano ~/.zshrc
// # √§ndra vad du vill i designen
// # PROMPT='%F{green}üå∑ %B%F{blue}%1d%f '
// # n√§r du √§r n√∂jd ctrl + O (som i bokstaven) sedan enter
// # sedan ctrl + x
// # source ~/.zshrc
// # s√• startar din oterminal ochm voila!
